#! /usr/bin/env bash

function print_usage () {
   echo "forkstart help:"
   echo
   echo "SYNOPSIS:  Starts fork services.  Use one and only one switch to choose services:"
   echo "     -f (farmer), -fnw (farmer-no-wallet), -h (harvester), or -t (timelord)."
   echo "           The options -fo (farmer only) and -fh (farmer-only harvester) can also be"
   echo "     used to start those services without a full node, but this is not recommended"
   echo "     for typical farming setups."
   echo "           If you wish to restart a running service, there is no need to stop services"
   echo "     prior to running forkstart.  forkstart will stop and restart the services as needed."
   echo "           Using 'forkstart all' to start up all forks requires configuring file"
   echo "     forktools/ftconfigs/config.forkstartall.  List forks you want to start with -f,"
   echo "     -fnw and -h in each of the three corresponding variables for those services."
   echo "           If using 'forkstart all', you can specify (as an example) -s 10 to set"
   echo "     a ten second delay between each fork start.  Recommended to set it to that or"
   echo "     even higher if you've been down for a while and all forks will need to resync."
   echo "           Between 'forkstop all' and 'forkstart all', server reboots become super"
   echo "     easy, barely an inconvenience."
   echo
   echo "PARAMETERS:"
   echo "    forkname | all                   If all, all forks will be started per configuration set in file"
   echo "                                        ftconfigs/config.forkstartall.  The only switch for 'all' is -s"
   echo "                                        (see below for details)"
   echo "                                     If forkname, one and only one of the following 6 switches is also required."
   echo "    -f | --farmer                    Starts farmer for forkname."
   echo "    -fnw | --farmernowallet          Starts farmer-no-wallet for forkname."   
   echo "    -fo | --farmeronly               Starts farmer-only for forkname."
   echo "    -fh | --farmerharvester          Starts farmer-only and harvester for forkname."
   echo "    -h | --harvester                 Starts harvester for forkname."
   echo "    -t | --timelord                  Starts timelord service only for forkname."
   echo 
   echo "    -s | --sleep                     Only usable with 'forkstart all'.  Allows you to set a delay, in"
   echo "                                        seconds, between each forkstart."
   echo
   echo "    -help | --help                   Show this information again."
   echo
   exit 0
}

if [[ $1 != 'all' ]]; then
  VALIDATEFORKNAME='Yes'
fi
. ftinit.sh

FORKNAME=$1

if [[ $1 != 'all' && $2 == '' ]]; then
  echo "forkstart:  Running for a single fork requires switch as second parameter (e.g. -f, -fnw, -fo, -fh, -h, -t).  Aborting forkstart."
  print_usage
  exit
fi

if [[ $2 == '-f' || $2 == '--farmer' ]]; then
  STARTMETHOD='farmer -r'
fi
if [[ $2 == '-fnw' || $2 == '--farmernowallet' ]]; then
  STARTMETHOD='farmer-no-wallet -r'
fi
if [[ $2 == '-fo' || $2 == '--farmeronly' ]]; then
  STARTMETHOD='farmer-only -r'
fi
if [[ $2 == '-fh' || $2 == '--farmerharvester' ]]; then
  STARTMETHOD='farmer-only harvester -r'
fi
if [[ $2 == '-h' || $2 == '--harvester' ]]; then
  STARTMETHOD='harvester -r'
fi
if [[ $2 == '-t' || $2 == '--timelord' ]]; then
  STARTMETHOD='timelord'
fi
   
if [[ $1 != 'all' && $STARTMETHOD = '' ]]; then
  echo "forkstart:  Second parameter $2 unrecognized.  Please use valid switch.   Aborting forkstart."
  print_usage
  exit
fi

if [[ $1 != 'all' ]]; then
   echo "forkstart:  Attempting to run '$FORKNAME start $STARTMETHOD'"
   cd $FORKTOOLSBLOCKCHAINDIRS/$1-blockchain 
   . ./activate 
   $FORKNAME start $STARTMETHOD
   deactivate
   exit
else
   ORIGIFS=$IFS
   IFS=$'\n'
   if [[  $2 == '-s' || $2 == '-- sleep' ]]; then
      if [ "$3" -eq "$3" ]; then  # this oddly but correctly only returns true if the value is an integer
         SLEEPDELAY=$3
      fi
   fi   
   # Validate entire config.forkstartall file before starting.
   for plotdir in $FORKSTARTFLIST; do
      STRIPPEDCOMMENTS=$(sed 's/#.*//' <<< "$plotdir" | awk '{$1=$1};1' )
      if [[ $STRIPPEDCOMMENTS = '' ]]; then
        continue
      fi
      if [ ! -d $FORKTOOLSBLOCKCHAINDIRS/$STRIPPEDCOMMENTS-blockchain ]; then
         echo "forkstart all:  Invalid forkname in config.forkstartall, FORKSTARTFLIST section. Directory $STRIPPEDCOMMENTS-blockchain does not exist.  Please fix configuration and restart forkstart all.  Aborting."
         exit
      fi  
   done
   for plotdir in $FORKSTARTFNWLIST; do
      STRIPPEDCOMMENTS=$(sed 's/#.*//' <<< "$plotdir" | awk '{$1=$1};1' )
      if [[ $STRIPPEDCOMMENTS = '' ]]; then
        continue
      fi
      if [ ! -d $FORKTOOLSBLOCKCHAINDIRS/$STRIPPEDCOMMENTS-blockchain ]; then
         echo "forkstart all:  Invalid forkname in config.forkstartall, FORKSTARTFNWLIST section. Directory $STRIPPEDCOMMENTS-blockchain does not exist.  Please fix configuration and restart forkstart all.  Aborting."
         exit
      fi  
   done
   for plotdir in $FORKSTARTFOLIST; do
      STRIPPEDCOMMENTS=$(sed 's/#.*//' <<< "$plotdir" | awk '{$1=$1};1' )
      if [[ $STRIPPEDCOMMENTS = '' ]]; then
        continue
      fi
      if [ ! -d $FORKTOOLSBLOCKCHAINDIRS/$STRIPPEDCOMMENTS-blockchain ]; then
         echo "forkstart all:  Invalid forkname in config.forkstartall, FORKSTARTFOLIST section. Directory $STRIPPEDCOMMENTS-blockchain does not exist.  Please fix configuration and restart forkstart all.  Aborting."
         exit
      fi  
   done
   for plotdir in $FORKSTARTFHLIST; do
      STRIPPEDCOMMENTS=$(sed 's/#.*//' <<< "$plotdir" | awk '{$1=$1};1' )
      if [[ $STRIPPEDCOMMENTS = '' ]]; then
        continue
      fi
      if [ ! -d $FORKTOOLSBLOCKCHAINDIRS/$STRIPPEDCOMMENTS-blockchain ]; then
         echo "forkstart all:  Invalid forkname in config.forkstartall, FORKSTARTFHLIST section. Directory $STRIPPEDCOMMENTS-blockchain does not exist.  Please fix configuration and restart forkstart all.  Aborting."
         exit
      fi  
   done
   for plotdir in $FORKSTARTHLIST; do
      STRIPPEDCOMMENTS=$(sed 's/#.*//' <<< "$plotdir" | awk '{$1=$1};1' )
      if [[ $STRIPPEDCOMMENTS = '' ]]; then
        continue
      fi
      if [ ! -d $FORKTOOLSBLOCKCHAINDIRS/$STRIPPEDCOMMENTS-blockchain ]; then
         echo "forkstart all:  Invalid forkname in config.forkstartall, FORKSTARTHLIST section. Directory $STRIPPEDCOMMENTS-blockchain does not exist.  Please fix configuration and restart forkstart all.  Aborting."
         exit
      fi  
   done
   echo "forkstart all:  All entries in config.forkstartall validated.  Starting services."
   echo

   # Everything validated, start the starts! 
   for plotdir in $FORKSTARTHLIST; do
      STRIPPEDCOMMENTS=$(sed 's/#.*//' <<< "$plotdir" | awk '{$1=$1};1' )
      if [[ $STRIPPEDCOMMENTS = '' ]]; then
        continue
      fi      
      cd $FORKTOOLSBLOCKCHAINDIRS/$STRIPPEDCOMMENTS-blockchain 
      . ./activate
      $STRIPPEDCOMMENTS start harvester -r
      deactivate
      if [[ $SLEEPDELAY != '' ]]; then
        echo "forkstart:  Sleeping for $SLEEPDELAY seconds..."      
        sleep "$SLEEPDELAY"
      fi
   done
   for plotdir in $FORKSTARTFNWLIST; do
      STRIPPEDCOMMENTS=$(sed 's/#.*//' <<< "$plotdir" | awk '{$1=$1};1' )
      if [[ $STRIPPEDCOMMENTS = '' ]]; then
        continue
      fi      
      cd $FORKTOOLSBLOCKCHAINDIRS/$STRIPPEDCOMMENTS-blockchain 
      . ./activate
      $STRIPPEDCOMMENTS start farmer-no-wallet -r
      deactivate      
      if [[ $SLEEPDELAY != '' ]]; then
        echo "forkstart:  Sleeping for $SLEEPDELAY seconds..."      
        sleep "$SLEEPDELAY"
      fi
   done
   for plotdir in $FORKSTARTFLIST; do
      STRIPPEDCOMMENTS=$(sed 's/#.*//' <<< "$plotdir" | awk '{$1=$1};1' )
      if [[ $STRIPPEDCOMMENTS = '' ]]; then
        continue
      fi      
      cd $FORKTOOLSBLOCKCHAINDIRS/$STRIPPEDCOMMENTS-blockchain 
      . ./activate
      $STRIPPEDCOMMENTS start farmer -r
      deactivate
      if [[ $SLEEPDELAY != '' ]]; then
        echo "forkstart:  Sleeping for $SLEEPDELAY seconds..."      
        sleep "$SLEEPDELAY"
      fi
   done
   for plotdir in $FORKSTARTFHLIST; do
      STRIPPEDCOMMENTS=$(sed 's/#.*//' <<< "$plotdir" | awk '{$1=$1};1' )
      if [[ $STRIPPEDCOMMENTS = '' ]]; then
        continue
      fi      
      cd $FORKTOOLSBLOCKCHAINDIRS/$STRIPPEDCOMMENTS-blockchain 
      . ./activate
      $STRIPPEDCOMMENTS start farmer-only harvester -r
      deactivate
      if [[ $SLEEPDELAY != '' ]]; then
        echo "forkstart:  Sleeping for $SLEEPDELAY seconds..."      
        sleep "$SLEEPDELAY"
      fi
   done
   for plotdir in $FORKSTARTFOLIST; do
      STRIPPEDCOMMENTS=$(sed 's/#.*//' <<< "$plotdir" | awk '{$1=$1};1' )
      if [[ $STRIPPEDCOMMENTS = '' ]]; then
        continue
      fi      
      cd $FORKTOOLSBLOCKCHAINDIRS/$STRIPPEDCOMMENTS-blockchain 
      . ./activate
      $STRIPPEDCOMMENTS start farmer-only -r
      deactivate
      if [[ $SLEEPDELAY != '' ]]; then
        echo "forkstart:  Sleeping for $SLEEPDELAY seconds..."
        sleep "$SLEEPDELAY"
      fi
   done
   IFS=$ORIGIFS
fi

