#! /usr/bin/env bash

function print_usage () {
   echo "forkports help:"
   echo
   echo "SYNOPSIS:   Checks port locking contention on all forks with an active _harvester process."
   echo "            Extracts a list of every port used by each fork from the fork's config.yaml, then"
   echo "   runs 'ss' scanning for any process using those ports that does not contain that fork's"
   echo "   name as the owner of the process."
   echo "            If the listed processes don't have a *different* fork or app's name as the owner of the"
   echo "    process, that output can probably be safely disregarded. If no processes are listed under a"
   echo "    given fork in the output, no ports were locked by a different fork - i.e., no conflict found."
   echo
   echo "PARAMETERS:"
   echo "     -help | --help      Show this information again."
   echo
   exit 0
}

. ftinit.sh
# . ftbuildharvesterlist.sh
cd $FORKTOOLSBLOCKCHAINDIRS
FORKLIST=$( ls -d1 *-blockchain | sed 's/-blockchain//' )

ss -atnp | sed "s/      / /g" | head -1

for fork in $FORKLIST; do
  FORKNAME=$(echo $fork)
  if [[ $FORKNAME == 'xcha' || $FORKNAME == 'rose' || $FORKNAME == 'fishery' || $FORKNAME == 'nchain' ]]; then
     FORKNAME='chia'
  fi
  CURRENTCONFIG=$FORKTOOLSHIDDENDIRS/.$fork/mainnet/config/config.yaml
  CONFIGFOUND=$(ls $CURRENTCONFIG | wc -l | awk '{$1=$1};1' )
  if [[ $CONFIGFOUND == 0 ]]; then
     continue
  fi
  OLDIFS=$IFS
  IFS=''
  MEMORYCONFIG=$(cat $CURRENTCONFIG | c1grep -e '^harvester:' -e '^farmer:' -e '^full_node:' -e '^timelord:' -e '^timelord_launcher:' -e '^ui:' -e '^introducer:' -e '^wallet:' -e '^logging:' -e 'port: ' -e '_peer:') 
  PORTLIST=''
  while read line; do
     WORKLINE=$(sed 's/#.*//' <<< "$line" )  # This removes any comments from consideration for alteration
     TESTSECTION=$(c1grep -e '^harvester:' -e '^farmer:' -e '^full_node:' -e '^timelord:' -e '^timelord_launcher:' -e '^ui:' -e '^introducer:' -e '^wallet:' -e '^logging:' <<< "$WORKLINE" )
    if [[ $TESTSECTION != '' && $TESTSECTION != $SECTION ]]; then 
      SECTION=$TESTSECTION 
    fi
    if [[ $LASTLINE == *_peer:* ]]; then
       LASTLINE=$WORKLINE
       continue
    fi
    if [[ $SECTION == *timelord* || $SECTION == *introducer* ]]; then
       LASTLINE=$WORKLINE
       continue
    fi
    LASTLINE=$WORKLINE   
    PORTLISTADD=$(echo $WORKLINE | grep "port: " | grep -v "default_full_node_port" | grep -v "log_syslog_port" | sed 's/[ ]*[a-z_]*port: //g' | sed 's/[ ]*[#].*//g' | awk '{$1=$1};1' );
    PORTLIST+=$( printf '\n%s' $PORTLISTADD )
  done < <(printf '%s\n' "$MEMORYCONFIG")
  PORTLIST=$( echo $PORTLIST | sort | uniq )
  IFS=$OLDIFS
  
  echo "Scanning: $fork"
  for port in $PORTLIST; do
     if [[ $FORKNAME == 'littlelambocoin' ]]; then
#        forkss | grep :$port[^0-9] | grep -v '"'${FORKNAME} | sed "s/      / /g"   | sed 's/((//' | grep -Eo '.*users:"[^"]*["]' 
       CONFLICTS=$( forkss | grep :$port[^0-9] | grep -v '"'${FORKNAME} | sed "s/      / /g"   | sed 's/((//' | grep -Eo '.*users:"[^"]*["]' )
       if [[ $CONFLICTS != '' ]]; then
          echo "$fork port $port locked by: $CONFLICTS"
       fi
     else
#        forkss | grep :$port[^0-9] | grep -v '"'${FORKNAME} | sed "s/      / /g"   | sed 's/((//' | grep -Eo '.*users:"[^"]*["]'
       CONFLICTS=$( forkss | grep :$port[^0-9] | grep -v '"'${FORKNAME}_ | sed "s/      / /g"   | sed 's/((//' | grep -Eo '.*users:"[^"]*["]' )
       if [[ $CONFLICTS != '' ]]; then
          echo "$fork port $port locked by: $CONFLICTS"
       fi
     fi
  done
done
echo

